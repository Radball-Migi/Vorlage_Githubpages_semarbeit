# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # (1) Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # (2) Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# (3) Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# (4) Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # (5) Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # (6) Checkout source code
      - name: Checkout
        uses: actions/checkout@v4

      # (7) Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # (8) Setup Ruby and Bundler
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Adjust to your Jekyll versionâ€™s compatibility

      # (9) Install dependencies
      - name: Install dependencies
        run: |
          bundle install

      # (10) Build the Jekyll site
      - name: Build with Jekyll
        run: bundle exec jekyll build --destination ./_site

      # (11) Upload the generated site as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./_site

  # (12) Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # (13) Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
